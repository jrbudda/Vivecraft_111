--- a/net/minecraft/client/gui/GuiIngameMenu.java
+++ b/net/minecraft/client/gui/GuiIngameMenu.java
@@ -1,11 +1,21 @@
 package net.minecraft.client.gui;
 
 import java.io.IOException;
+
+import com.mtbs3d.minecrift.gui.GuiQuickCommandsInGame;
+import com.mtbs3d.minecrift.provider.MCOpenVR;
+import com.mtbs3d.minecrift.settings.AutoCalibration;
+import com.mtbs3d.minecrift.utils.jkatvr;
+
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.achievement.GuiAchievements;
 import net.minecraft.client.gui.achievement.GuiStats;
+import net.minecraft.client.main.Main;
 import net.minecraft.client.multiplayer.WorldClient;
 import net.minecraft.client.resources.I18n;
+import net.minecraft.client.settings.KeyBinding;
 import net.minecraft.realms.RealmsBridge;
+import net.minecraft.src.Reflector;
 
 public class GuiIngameMenu extends GuiScreen
 {
@@ -19,22 +29,43 @@
     public void initGui()
     {
         this.saveStep = 0;
-        this.buttonList.clear();
-        int i = -16;
-        int j = 98;
-        this.buttonList.add(new GuiButton(1, this.width / 2 - 100, this.height / 4 + 120 + -16, I18n.format("menu.returnToMenu", new Object[0])));
-
-        if (!this.mc.isIntegratedServerRunning())
-        {
-            ((GuiButton)this.buttonList.get(0)).displayString = I18n.format("menu.disconnect", new Object[0]);
-        }
-
-        this.buttonList.add(new GuiButton(4, this.width / 2 - 100, this.height / 4 + 24 + -16, I18n.format("menu.returnToGame", new Object[0])));
-        this.buttonList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 96 + -16, 98, 20, I18n.format("menu.options", new Object[0])));
-        GuiButton guibutton = this.addButton(new GuiButton(7, this.width / 2 + 2, this.height / 4 + 96 + -16, 98, 20, I18n.format("menu.shareToLan", new Object[0])));
-        guibutton.enabled = this.mc.isSingleplayer() && !this.mc.getIntegratedServer().getPublic();
-        this.buttonList.add(new GuiButton(5, this.width / 2 - 100, this.height / 4 + 48 + -16, 98, 20, I18n.format("gui.achievements", new Object[0])));
-        this.buttonList.add(new GuiButton(6, this.width / 2 + 2, this.height / 4 + 48 + -16, 98, 20, I18n.format("gui.stats", new Object[0])));
+       	KeyBinding.unPressAllKeys();
+     	this.buttonList.clear();
+     	byte var1 = -16;   
+     	int i = -16;
+     	int j = 98;
+     	boolean var2 = true;
+     	this.buttonList.add(new GuiButton(1, this.width / 2 - 100, this.height / 4 + 168 + var1, I18n.format("menu.returnToMenu", new Object[0])));
+ 
+     	if (!this.mc.isIntegratedServerRunning())
+     	{
+     		((GuiButton)this.buttonList.get(0)).displayString = I18n.format("menu.disconnect", new Object[0]);
+     	}
+ 
+     	this.buttonList.add(new GuiButton(4, this.width / 2 - 100, this.height / 4 + 24 + var1, I18n.format("menu.returnToGame", new Object[0])));
+     	this.buttonList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 96 + var1, 98, 20, I18n.format("menu.options", new Object[0])));
+     	this.buttonList.add(new GuiButton(100, this.width / 2 -100, this.height / 4 + 72 + var1,98,20, "Chat"));
+     	this.buttonList.add(new GuiButton(101, this.width / 2 + 2, this.height / 4 + 72 + var1, 98, 20, "Commands"));
+       	this.buttonList.add(new GuiButton(102, this.width / 2 - 100,this.height / 4 + 120 + var1, 49, 20, "Overlay"));
+       	this.buttonList.add(new GuiButton(103, this.width / 2 - 50,this.height / 4 + 120 + var1, 49, 20, "Profiler"));
+       	this.buttonList.add(new GuiButton(104, this.width / 2 + 2,this.height / 4 + 120 + var1, 98,	 20, "Screenshot"));
+       //	this.buttonList.add(new GuiButton(999, this.width / 2 + 100,this.height / 4 + 72 + var1, 98,	 20, "DEMO MODE"));
+  
+       	if(Reflector.forgeExists()) //todo: test position.
+      		this.buttonList.add(new GuiButton(12, this.width / 2 -50, this.height / 4 + 144 + var1, 98, 20, "Mod Options..."));
+      	 	
+       	if(mc.vrSettings.seated == false)
+       		this.buttonList.add(new GuiButton(105, this.width / 2 - 100, this.height / 4 + 144 + var1, "Calibrate Height"));
+ 
+     	GuiButton var3;
+     	this.buttonList.add(var3 = new GuiButton(7, this.width / 2 + 2, this.height / 4 + 96 + var1, 98, 20, I18n.format("menu.shareToLan", new Object[0])));
+     	this.buttonList.add(new GuiButton(5, this.width / 2 - 100, this.height / 4 + 48 + var1, 98, 20, I18n.format("gui.achievements", new Object[0])));
+     	this.buttonList.add(new GuiButton(6, this.width / 2 + 2, this.height / 4 + 48 + var1, 98, 20, I18n.format("gui.stats", new Object[0])));
+ 
+     	if(Main.katvr)
+           	this.buttonList.add(new GuiButton(106, this.width / 2 + 100,this.height / 4  + var1, 98, 20, "Align KAT WALK"));
+     	
+     	var3.enabled = this.mc.isSingleplayer() && !this.mc.getIntegratedServer().getPublic() && !Reflector.forgeExists();
     }
 
     /**
@@ -71,27 +102,69 @@
 
             case 2:
             case 3:
-            default:
-                break;
-
             case 4:
                 this.mc.displayGuiScreen((GuiScreen)null);
                 this.mc.setIngameFocus();
                 break;
 
             case 5:
+            	if (this.mc.player != null)
                 this.mc.displayGuiScreen(new GuiAchievements(this, this.mc.player.getStatFileWriter()));
                 break;
 
             case 6:
+            	if (this.mc.player != null)
                 this.mc.displayGuiScreen(new GuiStats(this, this.mc.player.getStatFileWriter()));
-                break;
+            	break;
 
             case 7:
-                this.mc.displayGuiScreen(new GuiShareToLan(this));
+            	this.mc.displayGuiScreen(new GuiShareToLan(this));
+            	break;
+            case 12:
+            	Reflector.call(Reflector.call(Reflector.FMLClientHandler_instance), Reflector.FMLClientHandler_showInGameModOptions,new Object[]{this});
+            	break;
+            case 100:
+            	this.mc.displayGuiScreen(new GuiChat());
+            	break;
+            case 110:
+            	this.mc.displayGuiScreen(new GuiChat());
+            	break;
+            case 101:
+            	this.mc.displayGuiScreen(new GuiQuickCommandsInGame());
+            	this.initGui();
+            	break;
+            case 102:
+            	mc.gameSettings.showDebugInfo = !mc.gameSettings.showDebugInfo;
+            	this.mc.displayGuiScreen((GuiScreen)null);
+            	break;
+            case 103:
+            	mc.gameSettings.showDebugProfilerChart = !mc.gameSettings.showDebugProfilerChart;
+            	mc.gameSettings.showDebugInfo = mc.gameSettings.showDebugProfilerChart;
+            	break;
+            case 104:
+            	this.mc.displayGuiScreen((GuiScreen)null);
+            	this.mc.grabScreenShot = 10;
+            	break;
+	        case 105:
+		        AutoCalibration.calibrateManual();
+		        Minecraft.getMinecraft().vrSettings.saveOptions();
+		        this.mc.displayGuiScreen((GuiScreen)null);
+		        this.mc.setIngameFocus();
+		        break;
+	        case 106:
+	        	jkatvr.resetYaw(mc.vrPlayer.getHMDYaw_Room());
+		        this.mc.displayGuiScreen((GuiScreen)null);
+		        this.mc.setIngameFocus();
+		        break;
+	        case 999:
+            	this.mc.displayGuiScreen((GuiScreen)null);
+            	break;
+            default:
+
         }
     }
 
+
     /**
      * Called from the main game loop to update the screen.
      */
